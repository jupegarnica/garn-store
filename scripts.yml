scripts:
  test: deno test --allow-read --allow-env  --allow-write --unstable --location=http://localhost:1357
  test-watch: deno test --watch --allow-read --allow-env  --allow-write --unstable --no-check --location=http://localhost:1357
  # test-watch-custom: deno run -A --unstable --watch tests/test-watch.ts
  debug: deno run -A --location http://localhost:1357  --no-check --unstable --watch  tests/debug.ts
  bench: deno run -A --unstable tests/benchmarks/benchmarks.ts
  bench-watch: deno run --no-check -A --unstable --watch tests/benchmarks/benchmarks.ts
  coverage:
    - rm -rf tests/coverage
    - deno test --allow-read --allow-write --unstable --coverage=tests/coverage
    - deno coverage --unstable tests/coverage --lcov > tests/coverage/coverage.lcov
    - genhtml -o tests/coverage/html tests/coverage/coverage.lcov
    - deno run -A https://deno.land/std/http/file_server.ts tests/coverage/html
  lint: deno lint --unstable **/*.ts
  format: deno fmt  **/*.ts
  format-check: deno fmt --check -q **/*.ts
  bundle-node:
      - deno bundle --unstable core/Store.ts dist/Store.mjs
  bundle-browser:
      - deno bundle --unstable core/StoreLocalStorage.ts dist/StoreLocalStorage.mjs
      - deno bundle --unstable core/StoreSessionStorage.ts dist/StoreSessionStorage.mjs
      - deno bundle --unstable core/StoreUrl.ts dist/StoreUrl.mjs
  update:
    cmd: deno run -A https://deno.land/x/udd@0.4.1/main.ts core/deps.ts tests/test_deps.ts
    watch: false

# watcher:
#   # The number of milliseconds after the last change.
#   interval: 350
#   # The file extensions that it will scan for.
#   exts: ['js', 'jsx', 'ts', 'tsx', 'yaml', 'yml']
#   # The globs that it will scan for.
#   match: ['**/*.*']
#   # The globs that it will not scan for.
#   skip: ['*/.git/*']
#   # Use the legacy file monitoring algorithm. (walking)
#   legacy: false
